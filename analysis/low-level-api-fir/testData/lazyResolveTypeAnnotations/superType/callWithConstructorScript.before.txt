@R|util/Anno|(LAZY_EXPRESSION)  kotlin/collections/List<@R|util/Anno|(LAZY_EXPRESSION)  kotlin/Int>
  context -> FirConstructorSymbol util/MyClass.MyClass
  anchor -> [FirRegularClassSymbol util/MyClass]

@R|util/Anno|(LAZY_EXPRESSION)  kotlin/Int
  context -> FirConstructorSymbol util/MyClass.MyClass
  anchor -> [FirRegularClassSymbol util/MyClass]

@R|util/Anno|(LAZY_EXPRESSION)  kotlin/collections/List<@R|util/Anno|(LAZY_EXPRESSION)  kotlin/Int>
  context -> FirConstructorSymbol util/MyClass.MyClass
  anchor -> [FirRegularClassSymbol util/MyClass]

@R|util/Anno|(LAZY_EXPRESSION)  kotlin/Int
  context -> FirConstructorSymbol util/MyClass.MyClass
  anchor -> [FirRegularClassSymbol util/MyClass]

@R|util/Anno|(LAZY_EXPRESSION)  util/AbstractClass<@R|util/Anno|(LAZY_EXPRESSION)  kotlin/collections/List<@R|util/Anno|(LAZY_EXPRESSION)  kotlin/Int>>
  context -> FirRegularClassSymbol util/MyClass
  anchor -> [FirRegularClassSymbol util/MyClass]

@R|util/Anno|(LAZY_EXPRESSION)  kotlin/collections/List<@R|util/Anno|(LAZY_EXPRESSION)  kotlin/Int>
  context -> FirRegularClassSymbol util/MyClass
  anchor -> [FirRegularClassSymbol util/MyClass]

@R|util/Anno|(LAZY_EXPRESSION)  kotlin/Int
  context -> FirRegularClassSymbol util/MyClass
  anchor -> [FirRegularClassSymbol util/MyClass]

FILE: [ResolvedTo(IMPORTS)] callWithConstructorScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(RAW_FIR)] <script-callWithConstructorScript.kts>
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        @R|kotlin/annotation/Target|[CompilerRequiredAnnotations](Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.TYPE|) public? final? [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=util/Anno.position] position: String): R|util/Anno| {
                LAZY_super<R|kotlin/Any|>
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val position: String = R|<local>/position|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        public? final? const [ResolvedTo(RAW_FIR)] val prop: <implicit> = LAZY_EXPRESSION
            public? [ResolvedTo(RAW_FIR)] get(): <implicit>

        public? abstract [ResolvedTo(SUPER_TYPES)] class AbstractClass<[ResolvedTo(SUPER_TYPES)] T> : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=AbstractClass] constructor<[ResolvedTo(SUPER_TYPES)] T>(): R|util/AbstractClass<T>| {
                LAZY_super<R|kotlin/Any|>
            }

        }

        public? final? [ResolvedTo(TYPES)] class MyClass : R|@R|util/Anno|(LAZY_EXPRESSION)  util/AbstractClass<@R|util/Anno|(LAZY_EXPRESSION)  kotlin/collections/List<@R|util/Anno|(LAZY_EXPRESSION)  kotlin/Int>>| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=MyClass] constructor(): R|util/MyClass| {
                LAZY_super<@R|util/Anno|[Unresolved](LAZY_EXPRESSION) AbstractClass<R|@R|util/Anno|(LAZY_EXPRESSION)  kotlin/collections/List<@R|util/Anno|(LAZY_EXPRESSION)  kotlin/Int>|>>
            }

        }
